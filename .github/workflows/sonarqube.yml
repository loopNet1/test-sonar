
name: SonarQube analysis

on: push
jobs:
  sonarQubeTrigger:
    name: SonarQube Trigger
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@master
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@master
      with:
        host: ${{ secrets.SONAR_HOST_URL }}
        login: ${{ secrets.SONAR_TOKEN }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
#   workflow_dispatch:

# permissions:
#   pull-requests: read # allows SonarQube to decorate PRs with analysis results

# jobs:
#   Analysis:
#     runs-on: self-hosted
#     steps:
#       - name: Analyze with SonarQube

#         # You can pin the exact commit or the version.
#         # uses: SonarSource/sonarqube-scan-action@v1.1.0
#         uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
#         env:
#           GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}  # Needed to get PR information
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
#         with:
#           # Additional arguments for the sonarcloud scanner
#           args:
#             # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
#             # mandatory
#             -Dsonar.projectKey=github-sonar
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false
